---
title : CHAMPS Verbal Autopsy Data Quality Check
author : Young
date: Aug 22nd 2023
---

# CHAMPS Verbal Autopsy Data Quality Check


Using the dataset "CHAMPS_ deid_verbal_autopsy", the data quality check to discuss further process. 

Notice that you don't need to define chunk options, but you can using
`#+`. just before code e.g. `#+ term=True, caption='Fancy plots.'`.
If you're viewing the published version have a look at the
[source](FIR_delibGR.sosign_plots.jl) to see the markup.


<!-- this setup dependencies, but doesn't appear in the generated document -->
```julia; echo = false; results = "hidden"
using Pkg
using Statistics
using FreqTables


```


# FIR Filter Design


We'll implement lowpass, highpass and ' bandpass FIR filters. If
you want to read more about DSP I highly recommend [The Scientist
and Engineer's Guide to Digital Signal
Processing](http://www.dspguide.com/) which is freely available
online.


## Calculating frequency response


DSP.jl package doesn't (yet) have a method to calculate the
the frequency response of a FIR filter so we define it:

```julia
freqtable(champs_df3, :"Id10186")

```

## Design Lowpass FIR filter


Designing a lowpass FIR filter is very simple to do with DSP.jl, all you
need to do is to define the window length, cut off frequency and the
window. We will define a lowpass filter with cut off frequency at 5Hz for a signal
sampled at 20 Hz.
We will use the Hamming window, which is defined as:
$w(n) = \alpha - \beta\cos\frac{2\pi n}{N-1}$, where $\alpha=0.54$ and $\beta=0.46$

```julia
fs = 20
f = digitalfilter(Lowpass(5, fs = fs), FIRWindow(hamming(61)))
w = range(0, stop=pi, length=1024)
h = FIRfreqz(f, w)
```

## Plot the frequency and impulse response


The next code chunk is executed in term mode, see the [script](FIR_design.jl) for syntax.

```julia; term=true
h_db = log10.(abs.(h));
ws = w/pi*(fs/2)
```
